name: Test Company-Project

on:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        experimental_use_app_router: [
          {name: "Page router", value: "False"},
          {name: "App router", value: "True"},
        ]

    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install -y jq

      # Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          LATEST_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r '.tag_name')
          sudo curl -L "https://github.com/docker/compose/releases/download/$LATEST_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        shell: bash

      # Continue with testing steps
      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.11"
      - name: Install cookiecutter
        run: |
          python -m pip install --upgrade pip
          pip install cookiecutter
      - name: Cleanup
        run: |
          set -x
          rm -rf Company-Project
      - name: Run cookiecutter
        run: |
          cookiecutter . --no-input experimental_use_app_router=${{ matrix.experimental_use_app_router.value }}
      - name: Create docker-compose config for running boilerplate tests
        run: |
          cp docker-compose-ci.yml Company-Project/docker-compose-ci.yml
      - name: Build image
        run: |
          cd Company-Project
          chmod +x src/docker-entrypoint.sh
          docker-compose -f ../docker-compose-ci.yml build
      - name: Verify backend scaffolder
        run: |
          cd Company-Project
          set -x
          docker-compose -f ../docker-compose-ci.yml run --rm python python manage.py new_page --name=Article
      - name: Run tests on container
        run: |
          cd Company-Project
          docker-compose -f ../docker-compose-ci.yml run --rm python test
          docker-compose -f ../docker-compose-ci.yml run --rm python typecheck
          docker-compose -f ../docker-compose-ci.yml run --rm python lint
      - name: Run frontend tests
        run: |
          cd Company-Project/frontend
          npm ci
          npm run test:ci
          IGNORE_SENTRY=1 npm run build
          npm run build-storybook
